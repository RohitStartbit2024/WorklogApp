@page "/admin/users"

@using WorklogApp.Services
@using WorklogApp.Models;

@inject UserService UserService
@inject NavigationManager Navigation


<h3>Manage Users</h3>

@if (users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button class="btn btn-primary mb-3" @onclick="ShowAddForm">Add User</button>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>EmployeeId</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.EmployeeId</td>
                    <td>@user.FirstName @user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.UserRole?.Role</td>
                    <td>
                        <button class="btn btn-sm btn-warning" @onclick="() => EditUser(user.Id)">Edit</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => DeleteUser(user.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<User>? users;

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetUsersAsync();
    }

    private async Task DeleteUser(int id)
    {
        await UserService.DeleteUserAsync(id);
        users = await UserService.GetUsersAsync();
    }

    private void ShowAddForm()
    {
        Navigation.NavigateTo("/admin/users/form");
    }

    private void EditUser(int id)
    {
        Navigation.NavigateTo($"/admin/users/form/{id}");
    }

}
