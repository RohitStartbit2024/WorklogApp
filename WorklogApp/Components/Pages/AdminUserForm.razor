@page "/admin/users/form/{Id:int?}"
@using WorklogApp.Models
@using WorklogApp.Services
@inject UserService UserService
@inject NavigationManager Navigation

<ProtectedPage TPage="object" AllowedRoles="@adminRoles">

    <div class="container py-4">

        <!-- Title -->
        <h3 class="text-center fw-bold mb-4"
            style="background: linear-gradient(90deg,#a06cd5,#6247aa); -webkit-background-clip: text; -webkit-text-fill-color: transparent; transition: all .3s;">
            @(Id == null ? "Add User" : "Edit User")
        </h3>

        @if (user == null || roles == null)
        {
            <p class="text-center fst-italic text-secondary">Loading...</p>
        }
        else
        {
            <!-- Form Card -->
            <div class="p-4 rounded-4 shadow-lg bg-white mx-auto"
                 style="max-width: 650px; transition: all .3s;">
                <EditForm Model="user" OnValidSubmit="SaveUser">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger mb-3" />

                    <!-- Employee Id -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Employee Id</label>
                        <InputText class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.EmployeeId" />
                    </div>

                    <!-- First Name -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">First Name</label>
                        <InputText class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.FirstName" />
                    </div>

                    <!-- Last Name -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Last Name</label>
                        <InputText class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.LastName" />
                    </div>

                    <!-- Role -->
                    <div class="mb-4">
                        <label class="form-label fw-semibold">Role</label>
                        <InputSelect class="form-select rounded-3 shadow-sm border-0"
                                     style="background:#f7f0fc;" @bind-Value="user.UserRoleId">
                            @foreach (var role in roles)
                            {
                                <option value="@role.Id">@role.Role</option>
                            }
                        </InputSelect>
                    </div>

                    <!-- Email -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Email</label>
                        <InputText class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.Email" />
                    </div>

                    <!-- Phone -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Phone No</label>
                        <InputText class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.PhoneNo" />
                    </div>

                    <!-- DOB -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Date of Birth</label>
                        <InputDate class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.DOB" />
                    </div>

                    <!-- DOJ -->
                    <div class="mb-3">
                        <label class="form-label fw-semibold">Date of Joining</label>
                        <InputDate class="form-control rounded-3 shadow-sm border-0"
                                   style="background:#f7f0fc;" @bind-Value="user.DateOfJoining" />
                    </div>

                    <!-- Password -->
                    @if (!Id.HasValue)
                    {
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Password</label>
                            <InputText type="password"
                                       class="form-control rounded-3 shadow-sm border-0"
                                       style="background:#f7f0fc;" @bind-Value="user.Password" />
                        </div>
                    }

                    <!-- Buttons -->
                    <div class="d-flex justify-content-center gap-3">
                        <button type="submit"
                                class="btn text-white fw-semibold rounded-pill px-4 shadow-sm"
                                style="background: linear-gradient(135deg,#a06cd5,#6247aa); transition: all .3s;"
                                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 6px 18px rgba(98,71,170,0.5)'"
                                onmouseout="this.style.transform='none'; this.style.boxShadow='0 3px 8px rgba(0,0,0,0.2)'">
                            Save
                        </button>

                        <button type="button"
                                class="btn text-dark fw-semibold rounded-pill px-4 shadow-sm"
                                style="background:#e2cfea; transition: all .3s;"
                                onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 6px 18px rgba(0,0,0,0.2)'"
                                onmouseout="this.style.transform='none'; this.style.boxShadow='0 2px 6px rgba(0,0,0,0.1)'"
                                @onclick="GoBack">
                            Cancel
                        </button>
                    </div>
                </EditForm>
            </div>
        }
    </div>

</ProtectedPage>

@code {
    [Parameter] public int? Id { get; set; }

    private User? user;
    private List<UserRole>? roles;

    private string[] adminRoles = new[] { "Admin" };

    protected override async Task OnInitializedAsync()
    {
        roles = await UserService.GetRolesAsync();

        if (Id.HasValue)
        {
            user = await UserService.GetUserAsync(Id.Value);
        }
        else
        {
            user = new User
            {
                DOB = DateOnly.FromDateTime(DateTime.Today),
                DateOfJoining = DateOnly.FromDateTime(DateTime.Today)
            };
        }
    }

    private async Task SaveUser()
    {
        if (Id.HasValue)
        {
            await UserService.UpdateUserAsync(user!);
        }
        else
        {
            await UserService.AddUserAsync(user!);
        }

        Navigation.NavigateTo("/admin/users");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/admin/users");
    }
}
