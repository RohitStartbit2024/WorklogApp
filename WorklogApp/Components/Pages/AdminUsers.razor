@page "/admin/users"
@using WorklogApp.Services
@using WorklogApp.Models

@inject UserService UserService
@inject NavigationManager Navigation
@inject CurrentUserService CurrentUserService

<ProtectedPage TPage="object" AllowedRoles="@adminRoles">

    <div class="container py-4">

        <!-- Title -->
        <h3 class="text-center fw-bold mb-4"
            style="background: linear-gradient(90deg,#a06cd5,#6247aa); -webkit-background-clip: text; -webkit-text-fill-color: transparent; transition: all .3s;">
            Manage Users
        </h3>

        @if (!isLoaded)
        {
            <p class="text-center fst-italic text-secondary">Loading...</p>
        }
        else if (!users.Any())
        {
            <p class="text-center text-muted">No users found.</p>
            <button class="btn text-white fw-semibold rounded-pill px-4 shadow-sm"
                    style="background: linear-gradient(135deg,#a06cd5,#6247aa); transition: all .3s;"
                    onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 6px 18px rgba(98,71,170,0.5)'"
                    onmouseout="this.style.transform='none'; this.style.boxShadow='0 3px 8px rgba(0,0,0,0.2)'"
                    @onclick="ShowAddForm">
                + Add User
            </button>
        }
        else
        {
            <!-- Add Button -->
            <button class="btn text-white fw-semibold rounded-pill px-4 mb-3 shadow-sm"
                    style="background: linear-gradient(135deg,#a06cd5,#6247aa); transition: all .3s;"
                    onmouseover="this.style.transform='translateY(-3px)'; this.style.boxShadow='0 6px 18px rgba(98,71,170,0.5)'"
                    onmouseout="this.style.transform='none'; this.style.boxShadow='0 3px 8px rgba(0,0,0,0.2)'"
                    @onclick="ShowAddForm">
                + Add User
            </button>

            <!-- Users Table -->
            <div class="p-3 rounded-4 shadow-lg bg-white"
                 style="transition: all .3s;">
                <table class="table align-middle text-center mb-0">
                    <thead class="text-white"
                           style="background: linear-gradient(90deg,#a06cd5,#6247aa);">
                        <tr>
                            <th>EmployeeId</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in users)
                        {
                            <tr style="transition: all .3s;"
                                onmouseover="this.style.backgroundColor='#f7f0fc'; this.style.transform='scale(1.01)'"
                                onmouseout="this.style.backgroundColor=''; this.style.transform='none'">
                                <td>@user.EmployeeId</td>
                                <td>@user.FirstName @user.LastName</td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge rounded-pill px-3 py-2 fw-semibold"
                                          style="background:#e8dcfa; color:#3a1d68;">
                                        @user.UserRole?.Role
                                    </span>
                                </td>
                                <td class="d-flex justify-content-center gap-2">
                                    <button class="btn btn-sm text-white fw-semibold rounded-pill px-3 shadow-sm"
                                            style="background:#6247aa; transition: all .3s;"
                                            onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 4px 12px rgba(0,0,0,0.2)'"
                                            onmouseout="this.style.transform='none'; this.style.boxShadow='0 2px 6px rgba(0,0,0,0.1)'"
                                            @onclick="() => EditUser(user.Id)">
                                        Edit
                                    </button>
                                    <button class="btn btn-sm text-white fw-semibold rounded-pill px-3 shadow-sm"
                                            style="background:#a06cd5; transition: all .3s;"
                                            onmouseover="this.style.transform='translateY(-2px)'; this.style.boxShadow='0 4px 12px rgba(230,57,70,0.6)'"
                                            onmouseout="this.style.transform='none'; this.style.boxShadow='0 2px 6px rgba(0,0,0,0.1)'"
                                            @onclick="() => DeleteUser(user.Id)">
                                        Delete
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>

</ProtectedPage>

@code {
    private List<User> users = new();
    private string[] adminRoles = new[] { "Admin" };
    private bool isLoaded = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (CurrentUserService.CurrentUser == null)
            {
                await CurrentUserService.LoadUserAsync();
            }

            var currentUser = CurrentUserService.CurrentUser;
            if (currentUser == null || currentUser.RoleName != "Admin")
            {
                Navigation.NavigateTo("/");
                return;
            }

            users = await UserService.GetUsersAsync() ?? new List<User>();
            isLoaded = true;
            StateHasChanged();
        }
    }

    private void ShowAddForm()
    {
        Navigation.NavigateTo("/admin/users/form");
    }

    private void EditUser(int id)
    {
        Navigation.NavigateTo($"/admin/users/form/{id}");
    }

    private async Task DeleteUser(int id)
    {
        await UserService.DeleteUserAsync(id);
        users = await UserService.GetUsersAsync() ?? new List<User>();
        StateHasChanged();
    }
}
