@page "/admin/users/form/{Id:int?}"
@using WorklogApp.Models
@using WorklogApp.Services
@inject UserService UserService
@inject NavigationManager Navigation

<ProtectedPage TPage="object" AllowedRoles="@adminRoles">

    <h3>@(Id == null ? "Add User" : "Edit User")</h3>

    @if (user == null || roles == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <EditForm Model="user" OnValidSubmit="SaveUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Employee Id</label>
                <InputText class="form-control" @bind-Value="user.EmployeeId" />
            </div>

            <div class="mb-3">
                <label class="form-label">First Name</label>
                <InputText class="form-control" @bind-Value="user.FirstName" />
            </div>

            <div class="mb-3">
                <label class="form-label">Last Name</label>
                <InputText class="form-control" @bind-Value="user.LastName" />
            </div>

            <div class="mb-3">
                <label class="form-label">Email</label>
                <InputText class="form-control" @bind-Value="user.Email" />
            </div>

            <div class="mb-3">
                <label class="form-label">Phone No</label>
                <InputText class="form-control" @bind-Value="user.PhoneNo" />
            </div>

            <div class="mb-3">
                <label class="form-label">Date of Birth</label>
                <InputDate class="form-control" @bind-Value="user.DOB" />
            </div>

            <div class="mb-3">
                <label class="form-label">Date of Joining</label>
                <InputDate class="form-control" @bind-Value="user.DateOfJoining" />
            </div>

            <div class="mb-3">
                <label class="form-label">Password</label>
                <InputText class="form-control" @bind-Value="user.Password" type="password" />
            </div>

            <div class="mb-3">
                <label class="form-label">Role</label>
                <InputSelect class="form-control" @bind-Value="user.UserRoleId">
                    @foreach (var role in roles)
                    {
                        <option value="@role.Id">@role.Role</option>
                    }
                </InputSelect>
            </div>

            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Cancel</button>
        </EditForm>
    }

</ProtectedPage>

@code {
    [Parameter] public int? Id { get; set; }

    private User? user;
    private List<UserRole>? roles;

    private string[] adminRoles = new[] { "Admin" };

    protected override async Task OnInitializedAsync()
    {
        roles = await UserService.GetRolesAsync();

        if (Id.HasValue)
        {
            user = await UserService.GetUserAsync(Id.Value);
        }
        else
        {
            user = new User
            {
                DOB = DateOnly.FromDateTime(DateTime.Today),
                DateOfJoining = DateOnly.FromDateTime(DateTime.Today)
            };
        }
    }

    private async Task SaveUser()
    {
        if (Id.HasValue)
        {
            await UserService.UpdateUserAsync(user!);
        }
        else
        {
            await UserService.AddUserAsync(user!);
        }

        Navigation.NavigateTo("/admin/users");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("/admin/users");
    }
}
