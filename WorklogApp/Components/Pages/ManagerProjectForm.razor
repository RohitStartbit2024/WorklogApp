@page "/manager/projects/form/{Id:int?}"
@using WorklogApp.Models
@using WorklogApp.Services
@inject ProjectService ProjectService
@inject NavigationManager Navigation

<h3>@(Id == 0 ? "Add Project" : "Edit Project")</h3>

<EditForm Model="@project" OnValidSubmit="SaveProject">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label class="form-label">Project ID</label>
        <InputText class="form-control" @bind-Value="project.ProjectId" />
    </div>

    <div class="mb-3">
        <label class="form-label">Name</label>
        <InputText class="form-control" @bind-Value="project.Name" />
    </div>

    <div class="mb-3">
        <label class="form-label">Description</label>
        <InputTextArea class="form-control" @bind-Value="project.Description" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public int? Id { get; set; }
    private Project project = new();

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue && Id.Value > 0)
        {
            var existing = await ProjectService.GetProjectAsync(Id.Value);
            if (existing != null)
            {
                project = existing;
            }
        }
    }

    private async Task SaveProject()
    {
        if (Id == null || Id == 0)
            await ProjectService.AddProjectAsync(project);
        else
            await ProjectService.UpdateProjectAsync(project);

        Navigation.NavigateTo("/manager/projects");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/manager/projects");
    }
}
